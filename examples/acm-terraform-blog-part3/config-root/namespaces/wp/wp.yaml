# Source: wordpress-gcp/templates/k8s-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sql-wp-ksa-wi
  annotations:
    iam.gke.io/gcp-service-account: sql-wp-sa@${PROJECT_ID?}.iam.gserviceaccount.com # {"$ref":"#/definitions/io.k8s.cli.substitutions.project-id-in-sa-sub"}
---
# Source: wordpress-gcp/templates/k8s-sql-db-credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-cloudsql-db-credentials
stringData:
  connectionName: us-central1:wp-db
  password: change-me
  projectId: ${PROJECT_ID?} # {"$ref":"#/definitions/io.k8s.cli.substitutions.project-id-in-sa-sub"}
  username: wordpress
---
# Source: wordpress-gcp/templates/gcp-sql-api.yaml
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata:
  name: sqladmin.googleapis.com
  annotations:
    cnrm.cloud.google.com/deletion-policy: abandon
    cnrm.cloud.google.com/disable-dependent-services: "false"
---
# Source: wordpress-gcp/templates/k8s-external-load-balancer.yaml
apiVersion: v1
kind: Service
metadata:
  name: wordpress-external
  labels:
    app: wordpress
spec:
  type: LoadBalancer
  selector:
    app: wordpress
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 80
---
# Source: wordpress-gcp/templates/k8s-stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wordpress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: sql-wp-ksa-wi
      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy", "-instances=$(PROJECT_ID):$(CONNECTION_NAME)=tcp:3306"]
          env:
            - name: CONNECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-cloudsql-db-credentials
                  key: connectionName
            - name: PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: wordpress-cloudsql-db-credentials
                  key: projectId
          resources:
            limits:
              cpu: "200m"
              memory: "100Mi"
        - name: wordpress
          image: wordpress:5.2.2-apache
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: 127.0.0.1:3306
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-cloudsql-db-credentials
                  key: username
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-cloudsql-db-credentials
                  key: password
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
          volumeMounts:
            - name: wordpress-volume
              mountPath: /var/www/html
          livenessProbe:
            failureThreshold: 20
            httpGet:
              port: 80
              path: /
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 10
            httpGet:
              port: 80
              path: /
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          imagePullPolicy: IfNotPresent
  volumeClaimTemplates:
    - metadata:
        name: wordpress-volume
      spec:
        resources:
          requests:
            storage: 10Gi
        accessModes: ["ReadWriteOnce"]
  serviceName: "wordpress"
---
# Source: wordpress-gcp/templates/gcp-wi-policy.yaml
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: sql-wp-sa-wi-policy
spec:
  bindings:
    - members:
        - serviceAccount:${PROJECT_ID?}.svc.id.goog[wp/sql-wp-ksa-wi] # {"$ref":"#/definitions/io.k8s.cli.substitutions.project-id-in-sa-sub"}
      role: roles/iam.workloadIdentityUser
  resourceRef:
    name: sql-wp-sa
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
---
# Source: wordpress-gcp/templates/gcp-sql-policy-member.yaml
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: sql-wp-sa-project-policymember
spec:
  member: serviceAccount:sql-wp-sa@${PROJECT_ID?}.iam.gserviceaccount.com # {"$ref":"#/definitions/io.k8s.cli.substitutions.project-id-in-sa-sub"}
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    external: ${PROJECT_ID?} # {"$ref":"#/definitions/io.k8s.cli.substitutions.project-id-in-sa-sub"}
  role: roles/cloudsql.client
---
# Source: wordpress-gcp/templates/gcp-sql-service-account.yaml
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: sql-wp-sa
spec:
  displayName: Service Account for WordPress Config Connector Sample
---
# Source: wordpress-gcp/templates/gcp-sql-db.yaml
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLDatabase
metadata:
  name: wordpress
spec:
  charset: utf8
  instanceRef:
    name: wp-db
---
# Source: wordpress-gcp/templates/gcp-sql-instance.yaml
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLInstance
metadata:
  name: wp-db
spec:
  databaseVersion: MYSQL_5_7
  region: us-central1
  settings:
    tier: db-f1-micro
---
# Source: wordpress-gcp/templates/gcp-sql-user.yaml
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLUser
metadata:
  name: wordpress
spec:
  host: "%"
  instanceRef:
    name: wp-db
  password:
    valueFrom:
      secretKeyRef:
        name: wordpress-cloudsql-db-credentials
        key: password
